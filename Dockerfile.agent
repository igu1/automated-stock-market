# Build stage
FROM python:3.11-slim-bookworm as builder

WORKDIR /app

# Install build dependencies with pinned versions
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential=12.9 \
    libssl-dev=3.0.9-1 \
    libffi-dev=3.4.4-1 \
    python3-dev=3.11.2-1 \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment with secure permissions
RUN python -m venv /opt/venv && \
    chmod 755 /opt/venv && \
    find /opt/venv -type d -exec chmod 755 {} + && \
    find /opt/venv -type f -exec chmod 644 {} +

ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies with hash checking
COPY requirements.txt .
RUN pip install --no-cache-dir \
    --require-hashes \
    --only-binary=:all: \
    -r requirements.txt

# Runtime stage
FROM python:3.11-slim

# Create non-root user
RUN useradd -m agent && \
    mkdir -p /app && \
    chown agent:agent /app

WORKDIR /app
USER agent

# Copy virtual environment from builder
COPY --from=builder --chown=agent:agent /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy application code
COPY --chown=agent:agent ./app /app

# Configure logging
RUN mkdir -p /app/logs && chown agent:agent /app/logs
ENV LOG_PATH=/app/logs/app.log

# Health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

EXPOSE 5000

CMD ["python", "app/web.py"]
